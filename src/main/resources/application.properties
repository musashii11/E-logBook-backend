spring.application.name=elogbook
server.port=8080

# --- Database (PostgreSQL) ---
spring.datasource.url=jdbc:postgresql://localhost:5432/elogbook_db
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASS:root}

# --- JPA / Hibernate ---
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- JWT (use env var in real setups) ---
jwt.secret=${JWT_SECRET:dev-only-weak-secret}
spring.config.import=optional:file:.env

# --- File Upload Limits ---
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Actuator
management.endpoints.web.exposure.include=health,info

# --- make Hibernate actually create DDL this run (optional, then revert to update) ---
# spring.jpa.hibernate.ddl-auto=create-drop

# --- show SQL + nicely formatted ---
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.highlight_sql=true

# --- loggers for SQL and parameters (Hibernate 6) ---
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE
logging.level.org.hibernate.type.descriptor.jdbc=TRACE

# --- loggers for schema generation (DDL) ---
logging.level.org.hibernate.tool.schema=DEBUG
logging.level.org.springframework.core.env=DEBUG
# (optional: even chattier)
logging.level.org.hibernate.tool.schema.internal.SchemaCreatorImpl=DEBUG
logging.level.org.hibernate.tool.schema.internal.SchemaMigratorImpl=DEBUG